{"version":3,"sources":["components/Field.tsx","index.tsx"],"names":["Field","sdk","useState","field","getValue","instructions","setInstructions","useEffect","window","startAutoResizer","stopAutoResizer","setValue","length","map","instruction","index","className","alignItems","value","onChange","event","newInstructions","handleChange","target","onClick","splice","handleRemove","icon","size","buttonType","init","root","document","getElementById","render"],"mappings":"4PA+DeA,EAvDD,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,IAAsB,EACGC,mBAAmBD,EAAIE,MAAMC,YADhC,mBAC9BC,EAD8B,KAChBC,EADgB,KAGrCC,qBAAU,WAGR,OAFAN,EAAIO,OAAOC,mBAEJ,WACLR,EAAIO,OAAOE,qBAEZ,CAACT,EAAIO,SAERD,qBAAU,WACRN,EAAIE,MAAMQ,SAASN,KAClB,CAACA,EAAcJ,EAAIE,QAkBtB,OAAO,qCACJE,EAAaO,OAAS,GAAKP,EAAaQ,KAAI,SAACC,EAAaC,GAAd,OAAwB,eAAC,IAAD,CAAMC,UAAU,uBAAuBC,WAAW,SAAlD,UACnE,cAAC,IAAD,CACEC,MAAOJ,EACPK,SAAU,SAAAC,GAAK,OAVA,SAACF,EAAeH,GACnC,IAAMM,EAAe,YAAOhB,GAC5BgB,EAAgBN,GAASG,EACzBZ,EAAgBe,GAOOC,CAAaF,EAAMG,OAAOL,MAAOH,MAEtD,cAAC,IAAD,CACEC,UAAU,qBACVQ,QAAS,kBApBM,SAACT,GACpB,IAAMM,EAAe,YAAOhB,GAC5BgB,EAAgBI,OAAOV,EAAO,GAC9BT,EAAgBe,GAiBGK,CAAaX,IAC5BY,KAAK,SACLC,KAAK,QACLC,WAAW,gBAIf,cAAC,IAAD,CACEL,QAhCc,WAChBlB,EAAgB,GAAD,mBAAKD,GAAL,CAAmB,OAgChCsB,KAAK,OACLC,KAAK,QACLC,WAAW,QAJb,iCCxCJC,gBAAK,SAAC7B,GACJ,IAAM8B,EAAOC,SAASC,eAAe,QAErCC,iBAAO,cAAC,EAAD,CAAOjC,IAAKA,IAA8B8B,Q","file":"static/js/main.e048a169.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Flex, Textarea, Button } from '@contentful/forma-36-react-components';\nimport { FieldExtensionSDK } from '@contentful/app-sdk';\n\ninterface FieldProps {\n  sdk: FieldExtensionSDK;\n}\n\nconst Field = ({ sdk }: FieldProps) => {\n  const [instructions, setInstructions] = useState<string[]>(sdk.field.getValue())\n\n  useEffect(() => {\n    sdk.window.startAutoResizer()\n\n    return () => {\n      sdk.window.stopAutoResizer()\n    }\n  }, [sdk.window])\n\n  useEffect(() => {\n    sdk.field.setValue(instructions)\n  }, [instructions, sdk.field])\n\n  const handleAdd = () => {\n    setInstructions([...instructions, ''])\n  }\n\n  const handleRemove = (index: number) => {\n    const newInstructions = [...instructions]\n    newInstructions.splice(index, 1)\n    setInstructions(newInstructions)\n  }\n\n  const handleChange = (value: string, index: number) => {\n    const newInstructions = [...instructions]\n    newInstructions[index] = value\n    setInstructions(newInstructions)\n  }\n\n  return <>\n    {instructions.length > 0 && instructions.map((instruction, index) => <Flex className=\"f36-margin-bottom--m\" alignItems=\"center\">\n      <Textarea\n        value={instruction}\n        onChange={event => handleChange(event.target.value, index)}\n      />\n      <Button\n        className=\"f36-margin-left--m\"\n        onClick={() => handleRemove(index)}\n        icon=\"Delete\"\n        size=\"small\"\n        buttonType=\"muted\"\n      ></Button>\n    </Flex>)}\n\n    <Button\n      onClick={handleAdd}\n      icon=\"Plus\"\n      size=\"small\"\n      buttonType=\"muted\"\n    >Add instruction</Button>\n  </>\n};\n\nexport default Field;\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport {\n  FieldExtensionSDK,\n  init,\n} from '@contentful/app-sdk';\nimport '@contentful/forma-36-react-components/dist/styles.css';\nimport '@contentful/forma-36-fcss/dist/styles.css';\nimport '@contentful/forma-36-tokens/dist/css/index.css';\nimport './index.css';\n\nimport Field from './components/Field';\n\ninit((sdk) => {\n  const root = document.getElementById('root');\n\n  render(<Field sdk={sdk as FieldExtensionSDK} />, root);\n});"],"sourceRoot":""}